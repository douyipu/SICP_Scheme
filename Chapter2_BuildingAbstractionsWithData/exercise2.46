#lang sicp

(define (make-vect x y)
  (cons x y))
(define (xcor-vect vector)
  (car vector))
(define (ycor-vect vector)
  (cdr vector))

(define (add-vect v1 v2)
  (make-vect (+ (xcor-vect v1) (xcor-vect v2))
             (+ (ycor-vect v1) (ycor-vect v2))))
(define (sub-vect v1 v2)
  (make-vect (- (xcor-vect v1) (xcor-vect v2))
             (- (ycor-vect v1) (ycor-vect v2))))
(define (scale-vect vector s)
  (make-vect (* (xcor-vect vector) s)
             (* (ycor-vect vector) s)))

(define v1 (make-vect 1 2))
(define v2 (make-vect 3 4))
(add-vect v1 v2)
(sub-vect v2 v1)
(scale-vect v1 2)
