#lang sicp
(define (make-interval a b)
  (if (> a b)
      (error "Upper-bound can not be smaller than lower-bound.")
      (cons a b)))
(define (upper-bound x) (cdr x))
(define (lower-bound x) (car x))

(define (make-center-percent c p)
  (make-interval (- c (* c (/ p 100)))
                 (+ c (* c (/ p 100)))))
(define (center i)
  (/ (+ (lower-bound i) (upper-bound i)) 2))
(define (percent x)
  (define (width i)
    (/ (- (upper-bound i) (lower-bound i)) 2))
  (* (/ (width x) (center x)) 100.0))

(center (make-interval 2 4))
(percent (make-interval 2 4))