#lang sicp
(define (p) (p))
(define (test x y)
  (if (= x 0) 0 y))

(if #t 0 (p))
(test 0 (p))
;;outcomes:
;0
;And the program runs forever because the interpreter uses applicative order:
;The predicate expression is evaluated first, and the result determines
;whether to evaluate the consequent or the alternative expression.