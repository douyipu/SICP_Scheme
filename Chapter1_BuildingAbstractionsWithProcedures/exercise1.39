#lang sicp
(define (cont-frac-iter n d k)
  (define (iter i result)
    (if (= i 0)
        result
        (iter (- i 1) (/ (n i) (+ (d i) result)))))
  (iter (- k 1) (/ (n k) (d k))))
(define (tan-cf x k)
  (cont-frac-iter
   (lambda (i) (if (= i 1) x (* x x (- 1.0))))
   (lambda (i) (- (* 2 i) 1))
   k))
(tan-cf 10 100)
   