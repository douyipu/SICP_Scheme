#lang sicp
(define (cube-root x)
  (cube-root-iter 1.0 x))
(define (cube-root-iter guess x)
  (if (good-enough? guess x)
      guess
      (cube-root-iter (improve guess x) x)))
(define (improve guess x)
  (/ (+ (/ x (* guess guess))
        (* 2 guess))
     3))
(define (good-enough? guess x)
  (< (abs (- (cube guess) x)) 0.001))
(define (cube x) (* x x x))
(cube-root 27) ;3.0000005410641766
(cube-root 9) ;2.0801035255095734
(cube (cube-root 5)) ;5.000735045685183